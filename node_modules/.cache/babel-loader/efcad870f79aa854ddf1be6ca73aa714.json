{"remainingRequest":"D:\\github\\web_mmaqa.com\\node_modules\\thread-loader\\dist\\cjs.js!D:\\github\\web_mmaqa.com\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\web_mmaqa.com\\node_modules\\vuetify\\lib\\util\\mergeData.js","dependencies":[{"path":"D:\\github\\web_mmaqa.com\\node_modules\\vuetify\\lib\\util\\mergeData.js","mtime":499162500000},{"path":"D:\\github\\web_mmaqa.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\web_mmaqa.com\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\web_mmaqa.com\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiRDpcXGdpdGh1Ylxcd2ViX21tYXFhLmNvbVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8qKgogKiBAY29weXJpZ2h0IDIwMTcgQWxleCBSZWdhbgogKiBAbGljZW5zZSBNSVQKICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vYWxleHNhc2hhcmVnYW4vdnVlLWZ1bmN0aW9uYWwtZGF0YS1tZXJnZQogKi8KZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVyZ2VEYXRhKCkgewogIHZhciBtZXJnZVRhcmdldCA9IHt9OwogIHZhciBpID0gYXJndW1lbnRzLmxlbmd0aDsKICB2YXIgcHJvcDsKICB2YXIgZXZlbnQ7IC8vIEFsbG93IGZvciB2YXJpYWRpYyBhcmd1bWVudCBsZW5ndGguCgogIHdoaWxlIChpLS0pIHsKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCB0aGUgZGF0YSBwcm9wZXJ0aWVzIGFuZCBleGVjdXRlIG1lcmdlIHN0cmF0ZWdpZXMKICAgIC8vIE9iamVjdC5rZXlzIGVsaW1pbmF0ZXMgbmVlZCBmb3IgaGFzT3duUHJvcGVydHkgY2FsbAogICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyhhcmd1bWVudHNbaV0pOyBfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pKyspIHsKICAgICAgcHJvcCA9IF9PYmplY3Qka2V5c1tfaV07CgogICAgICBzd2l0Y2ggKHByb3ApIHsKICAgICAgICAvLyBBcnJheSBtZXJnZSBzdHJhdGVneSAoYXJyYXkgY29uY2F0ZW5hdGlvbikKICAgICAgICBjYXNlICdjbGFzcyc6CiAgICAgICAgY2FzZSAnc3R5bGUnOgogICAgICAgIGNhc2UgJ2RpcmVjdGl2ZXMnOgogICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG1lcmdlVGFyZ2V0W3Byb3BdKSkgewogICAgICAgICAgICBtZXJnZVRhcmdldFtwcm9wXSA9IFtdOwogICAgICAgICAgfSAvLyBSZXBhY2thZ2luZyBpbiBhbiBhcnJheSBhbGxvd3MgVnVlIHJ1bnRpbWUKICAgICAgICAgIC8vIHRvIG1lcmdlIGNsYXNzL3N0eWxlIGJpbmRpbmdzIHJlZ2FyZGxlc3Mgb2YgdHlwZS4KCgogICAgICAgICAgbWVyZ2VUYXJnZXRbcHJvcF0gPSBtZXJnZVRhcmdldFtwcm9wXS5jb25jYXQoYXJndW1lbnRzW2ldW3Byb3BdKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vIFNwYWNlIGRlbGltaXRlZCBzdHJpbmcgY29uY2F0ZW5hdGlvbiBzdHJhdGVneQoKICAgICAgICBjYXNlICdzdGF0aWNDbGFzcyc6CiAgICAgICAgICBpZiAoIWFyZ3VtZW50c1tpXVtwcm9wXSkgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAobWVyZ2VUYXJnZXRbcHJvcF0gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBtZXJnZVRhcmdldFtwcm9wXSA9ICcnOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChtZXJnZVRhcmdldFtwcm9wXSkgewogICAgICAgICAgICAvLyBOb3QgYW4gZW1wdHkgc3RyaW5nLCBzbyBjb25jYXRlbmF0ZQogICAgICAgICAgICBtZXJnZVRhcmdldFtwcm9wXSArPSAnICc7CiAgICAgICAgICB9CgogICAgICAgICAgbWVyZ2VUYXJnZXRbcHJvcF0gKz0gYXJndW1lbnRzW2ldW3Byb3BdLnRyaW0oKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vIE9iamVjdCwgdGhlIHByb3BlcnRpZXMgb2Ygd2hpY2ggdG8gbWVyZ2UgdmlhIGFycmF5IG1lcmdlIHN0cmF0ZWd5IChhcnJheSBjb25jYXRlbmF0aW9uKS4KICAgICAgICAvLyBDYWxsYmFjayBtZXJnZSBzdHJhdGVneSBtZXJnZXMgY2FsbGJhY2tzIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGFycmF5LAogICAgICAgIC8vIHNvIHRoYXQgdGhlIGxhc3QgZGVmaW5lZCBjYWxsYmFjayB3aWxsIGJlIGludm9rZWQgZmlyc3QuCiAgICAgICAgLy8gVGhpcyBpcyBkb25lIHNpbmNlIHRvIG1pbWljIGhvdyBPYmplY3QuYXNzaWduIG1lcmdpbmcKICAgICAgICAvLyB1c2VzIHRoZSBsYXN0IGdpdmVuIHZhbHVlIHRvIGFzc2lnbi4KCiAgICAgICAgY2FzZSAnb24nOgogICAgICAgIGNhc2UgJ25hdGl2ZU9uJzoKICAgICAgICAgIGlmICghbWVyZ2VUYXJnZXRbcHJvcF0pIHsKICAgICAgICAgICAgbWVyZ2VUYXJnZXRbcHJvcF0gPSB7fTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgbGlzdGVuZXJzID0gbWVyZ2VUYXJnZXRbcHJvcF07CgogICAgICAgICAgZm9yICh2YXIgX2kyID0gMCwgX09iamVjdCRrZXlzMiA9IE9iamVjdC5rZXlzKGFyZ3VtZW50c1tpXVtwcm9wXSB8fCB7fSk7IF9pMiA8IF9PYmplY3Qka2V5czIubGVuZ3RoOyBfaTIrKykgewogICAgICAgICAgICBldmVudCA9IF9PYmplY3Qka2V5czJbX2kyXTsKCiAgICAgICAgICAgIC8vIENvbmNhdCBmdW5jdGlvbiB0byBhcnJheSBvZiBmdW5jdGlvbnMgaWYgY2FsbGJhY2sgcHJlc2VudC4KICAgICAgICAgICAgaWYgKGxpc3RlbmVyc1tldmVudF0pIHsKICAgICAgICAgICAgICAvLyBJbnNlcnQgY3VycmVudCBpdGVyYXRpb24gZGF0YSBpbiBiZWdpbm5pbmcgb2YgbWVyZ2VkIGFycmF5LgogICAgICAgICAgICAgIGxpc3RlbmVyc1tldmVudF0gPSBBcnJheSgpLmNvbmNhdCggLy8gZXNsaW50LWRpc2FibGUtbGluZQogICAgICAgICAgICAgIGxpc3RlbmVyc1tldmVudF0sIGFyZ3VtZW50c1tpXVtwcm9wXVtldmVudF0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFN0cmFpZ2h0IGFzc2lnbi4KICAgICAgICAgICAgICBsaXN0ZW5lcnNbZXZlbnRdID0gYXJndW1lbnRzW2ldW3Byb3BdW2V2ZW50XTsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vIE9iamVjdCBtZXJnZSBzdHJhdGVneQoKICAgICAgICBjYXNlICdhdHRycyc6CiAgICAgICAgY2FzZSAncHJvcHMnOgogICAgICAgIGNhc2UgJ2RvbVByb3BzJzoKICAgICAgICBjYXNlICdzY29wZWRTbG90cyc6CiAgICAgICAgY2FzZSAnc3RhdGljU3R5bGUnOgogICAgICAgIGNhc2UgJ2hvb2snOgogICAgICAgIGNhc2UgJ3RyYW5zaXRpb24nOgogICAgICAgICAgaWYgKCFtZXJnZVRhcmdldFtwcm9wXSkgewogICAgICAgICAgICBtZXJnZVRhcmdldFtwcm9wXSA9IHt9OwogICAgICAgICAgfQoKICAgICAgICAgIG1lcmdlVGFyZ2V0W3Byb3BdID0gX29iamVjdFNwcmVhZCh7fSwgYXJndW1lbnRzW2ldW3Byb3BdLCB7fSwgbWVyZ2VUYXJnZXRbcHJvcF0pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gUmVhc3NpZ25tZW50IHN0cmF0ZWd5IChubyBtZXJnZSkKCiAgICAgICAgY2FzZSAnc2xvdCc6CiAgICAgICAgY2FzZSAna2V5JzoKICAgICAgICBjYXNlICdyZWYnOgogICAgICAgIGNhc2UgJ3RhZyc6CiAgICAgICAgY2FzZSAnc2hvdyc6CiAgICAgICAgY2FzZSAna2VlcEFsaXZlJzoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgaWYgKCFtZXJnZVRhcmdldFtwcm9wXSkgewogICAgICAgICAgICBtZXJnZVRhcmdldFtwcm9wXSA9IGFyZ3VtZW50c1tpXVtwcm9wXTsKICAgICAgICAgIH0KCiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiBtZXJnZVRhcmdldDsKfQ=="},{"version":3,"sources":["../../src/util/mergeData.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\n\nimport { VNodeData } from 'vue'\n\n/**\n * Intelligently merges data for createElement.\n * Merges arguments left to right, preferring the right argument.\n * Returns new VNodeData object.\n */\nexport default function mergeData (...vNodeData: VNodeData[]): VNodeData\nexport default function mergeData (): VNodeData {\n  const mergeTarget: VNodeData & { [key: string]: any } = {}\n  let i: number = arguments.length\n  let prop: string\n  let event: string\n\n  // Allow for variadic argument length.\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'style':\n        case 'directives':\n          if (!Array.isArray(mergeTarget[prop])) {\n            mergeTarget[prop] = []\n          }\n          // Repackaging in an array allows Vue runtime\n          // to merge class/style bindings regardless of type.\n          mergeTarget[prop] = mergeTarget[prop].concat(arguments[i][prop])\n          break\n        // Space delimited string concatenation strategy\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = ''\n          }\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' '\n          }\n          mergeTarget[prop] += arguments[i][prop].trim()\n          break\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n        case 'on':\n        case 'nativeOn':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          const listeners = mergeTarget[prop]!\n          for (event of Object.keys(arguments[i][prop] || {})) {\n            // Concat function to array of functions if callback present.\n            if (listeners[event]) {\n              // Insert current iteration data in beginning of merged array.\n              listeners[event] = Array<Function>().concat( // eslint-disable-line\n                listeners[event],\n                arguments[i][prop][event]\n              )\n            } else {\n              // Straight assign.\n              listeners[event] = arguments[i][prop][event]\n            }\n          }\n          break\n        // Object merge strategy\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          mergeTarget[prop] = { ...arguments[i][prop], ...mergeTarget[prop] }\n          break\n        // Reassignment strategy (no merge)\n        case 'slot':\n        case 'key':\n        case 'ref':\n        case 'tag':\n        case 'show':\n        case 'keepAlive':\n        default:\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop]\n          }\n      }\n    }\n  }\n\n  return mergeTarget\n}\n"],"sourceRoot":""}]}