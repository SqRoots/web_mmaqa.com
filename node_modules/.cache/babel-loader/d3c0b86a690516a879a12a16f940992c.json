{"remainingRequest":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js!D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\components\\VBreadcrumbs\\VBreadcrumbs.js","dependencies":[{"path":"D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\components\\VBreadcrumbs\\VBreadcrumbs.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJEOlxcX193b3JrXFxtbWFxYS5jb21cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLyBTdHlsZXMKaW1wb3J0ICIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9WQnJlYWRjcnVtYnMvVkJyZWFkY3J1bWJzLnNhc3MiOyAvLyBDb21wb25lbnRzCgppbXBvcnQgeyBWQnJlYWRjcnVtYnNEaXZpZGVyLCBWQnJlYWRjcnVtYnNJdGVtIH0gZnJvbSAnLic7IC8vIE1peGlucwoKaW1wb3J0IFRoZW1lYWJsZSBmcm9tICIuLi8uLi9taXhpbnMvdGhlbWVhYmxlIjsgLy8gVXRpbHMKCmltcG9ydCBtaXhpbnMgZnJvbSAiLi4vLi4vdXRpbC9taXhpbnMiOwpleHBvcnQgZGVmYXVsdCBtaXhpbnMoVGhlbWVhYmxlCi8qIEB2dWUvY29tcG9uZW50ICovCikuZXh0ZW5kKHsKICBuYW1lOiAndi1icmVhZGNydW1icycsCiAgcHJvcHM6IHsKICAgIGRpdmlkZXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnLycKICAgIH0sCiAgICBpdGVtczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgbGFyZ2U6IEJvb2xlYW4KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjbGFzc2VzOiBmdW5jdGlvbiBjbGFzc2VzKCkgewogICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7CiAgICAgICAgJ3YtYnJlYWRjcnVtYnMtLWxhcmdlJzogdGhpcy5sYXJnZQogICAgICB9LCB0aGlzLnRoZW1lQ2xhc3Nlcyk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5EaXZpZGVyOiBmdW5jdGlvbiBnZW5EaXZpZGVyKCkgewogICAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudChWQnJlYWRjcnVtYnNEaXZpZGVyLCB0aGlzLiRzbG90cy5kaXZpZGVyID8gdGhpcy4kc2xvdHMuZGl2aWRlciA6IHRoaXMuZGl2aWRlcik7CiAgICB9LAogICAgZ2VuSXRlbXM6IGZ1bmN0aW9uIGdlbkl0ZW1zKCkgewogICAgICB2YXIgaXRlbXMgPSBbXTsKICAgICAgdmFyIGhhc1Nsb3QgPSAhIXRoaXMuJHNjb3BlZFNsb3RzLml0ZW07CiAgICAgIHZhciBrZXlzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgaXRlbSA9IHRoaXMuaXRlbXNbaV07CiAgICAgICAga2V5cy5wdXNoKGl0ZW0udGV4dCk7CiAgICAgICAgaWYgKGhhc1Nsb3QpIGl0ZW1zLnB1c2godGhpcy4kc2NvcGVkU2xvdHMuaXRlbSh7CiAgICAgICAgICBpdGVtOiBpdGVtCiAgICAgICAgfSkpO2Vsc2UgaXRlbXMucHVzaCh0aGlzLiRjcmVhdGVFbGVtZW50KFZCcmVhZGNydW1ic0l0ZW0sIHsKICAgICAgICAgIGtleToga2V5cy5qb2luKCcuJyksCiAgICAgICAgICBwcm9wczogaXRlbQogICAgICAgIH0sIFtpdGVtLnRleHRdKSk7CiAgICAgICAgaWYgKGkgPCB0aGlzLml0ZW1zLmxlbmd0aCAtIDEpIGl0ZW1zLnB1c2godGhpcy5nZW5EaXZpZGVyKCkpOwogICAgICB9CgogICAgICByZXR1cm4gaXRlbXM7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihoKSB7CiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLiRzbG90cy5kZWZhdWx0IHx8IHRoaXMuZ2VuSXRlbXMoKTsKICAgIHJldHVybiBoKCd1bCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICd2LWJyZWFkY3J1bWJzJywKICAgICAgY2xhc3M6IHRoaXMuY2xhc3NlcwogICAgfSwgY2hpbGRyZW4pOwogIH0KfSk7"},{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA,gE,CAMA;;AACA,SAAA,mBAAA,EAAA,gBAAA,QAAA,GAAA,C,CAEA;;AACA,OAAA,SAAA,+B,CAEA;;AACA,OAAA,MAAA;AAEA,eAAe,MAAM,CACnB;AACA;AAFmB,CAAN,CAAA,MAAA,CAGN;AACP,EAAA,IAAI,EADG,eAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EADG,MAAA;AAEP,MAAA,OAAO,EAAE;AAFF,KADJ;AAKL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,KAAA;AAEL,MAAA,OAAO,EAAE;AAAA,eAAO,EAAP;AAAA;AAFJ,KALF;AASL,IAAA,KAAK,EAAE;AATF,GAHA;AAeP,EAAA,QAAQ,EAAE;AACR,IAAA,OADQ,qBACD;AACL;AACE,gCAAwB,KADnB;AAAP,SAEK,KAAK,YAFV;AAID;AANO,GAfH;AAwBP,EAAA,OAAO,EAAE;AACP,IAAA,UADO,wBACG;AACR,aAAO,KAAA,cAAA,CAAA,mBAAA,EAAyC,KAAA,MAAA,CAAA,OAAA,GAAsB,KAAA,MAAA,CAAtB,OAAA,GAA4C,KAA5F,OAAO,CAAP;AAFK,KAAA;AAIP,IAAA,QAJO,sBAIC;AACN,UAAM,KAAK,GAAX,EAAA;AACA,UAAM,OAAO,GAAG,CAAC,CAAC,KAAA,YAAA,CAAlB,IAAA;AACA,UAAM,IAAI,GAAV,EAAA;;AAEA,WAAK,IAAI,CAAC,GAAV,CAAA,EAAgB,CAAC,GAAG,KAAA,KAAA,CAApB,MAAA,EAAuC,CAAvC,EAAA,EAA4C;AAC1C,YAAM,IAAI,GAAG,KAAA,KAAA,CAAb,CAAa,CAAb;AAEA,QAAA,IAAI,CAAJ,IAAA,CAAU,IAAI,CAAd,IAAA;AAEA,YAAA,OAAA,EAAa,KAAK,CAAL,IAAA,CAAW,KAAA,YAAA,CAAA,IAAA,CAAwB;AAAE,UAAA,IAAA,EAAA;AAAF,SAAxB,CAAX,EAAb,KACK,KAAK,CAAL,IAAA,CAAW,KAAA,cAAA,CAAA,gBAAA,EAAsC;AAAE,UAAA,GAAG,EAAE,IAAI,CAAJ,IAAA,CAAP,GAAO,CAAP;AAAuB,UAAA,KAAK,EAAE;AAA9B,SAAtC,EAA4E,CAAC,IAAI,CAA5F,IAAuF,CAA5E,CAAX;AAEL,YAAI,CAAC,GAAG,KAAA,KAAA,CAAA,MAAA,GAAR,CAAA,EAA+B,KAAK,CAAL,IAAA,CAAW,KAAX,UAAW,EAAX;AAChC;;AAED,aAAA,KAAA;AACD;AArBM,GAxBF;AAgDP,EAAA,MAhDO,kBAgDD,CAhDC,EAgDE;AACP,QAAM,QAAQ,GAAG,KAAA,MAAA,CAAA,OAAA,IAAuB,KAAxC,QAAwC,EAAxC;AAEA,WAAO,CAAC,CAAA,IAAA,EAAO;AACb,MAAA,WAAW,EADE,eAAA;AAEb,MAAA,KAAK,EAAE,KAAK;AAFC,KAAP,EAAR,QAAQ,CAAR;AAID;AAvDM,CAHM,CAAf","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport { VBreadcrumbsDivider, VBreadcrumbsItem } from '.'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n\n  props: {\n    divider: {\n      type: String,\n      default: '/',\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    large: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genDivider () {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider)\n    },\n    genItems () {\n      const items = []\n      const hasSlot = !!this.$scopedSlots.item\n      const keys = []\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i]\n\n        keys.push(item.text)\n\n        if (hasSlot) items.push(this.$scopedSlots.item!({ item }))\n        else items.push(this.$createElement(VBreadcrumbsItem, { key: keys.join('.'), props: item }, [item.text]))\n\n        if (i < this.items.length - 1) items.push(this.genDivider())\n      }\n\n      return items\n    },\n  },\n\n  render (h): VNode {\n    const children = this.$slots.default || this.genItems()\n\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes,\n    }, children)\n  },\n})\n"],"sourceRoot":""}]}