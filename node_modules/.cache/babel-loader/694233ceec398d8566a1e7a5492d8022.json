{"remainingRequest":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js!D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\mixins\\activatable\\index.js","dependencies":[{"path":"D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\mixins\\activatable\\index.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiRDpcXF9fd29ya1xcbW1hcWEuY29tXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL3R5cGVvZiI7Ci8vIE1peGlucwppbXBvcnQgRGVsYXlhYmxlIGZyb20gIi4uL2RlbGF5YWJsZSI7CmltcG9ydCBUb2dnbGVhYmxlIGZyb20gIi4uL3RvZ2dsZWFibGUiOyAvLyBVdGlsaXRpZXMKCmltcG9ydCBtaXhpbnMgZnJvbSAiLi4vLi4vdXRpbC9taXhpbnMiOwppbXBvcnQgeyBnZXRTbG90LCBnZXRTbG90VHlwZSB9IGZyb20gIi4uLy4uL3V0aWwvaGVscGVycyI7CmltcG9ydCB7IGNvbnNvbGVFcnJvciB9IGZyb20gIi4uLy4uL3V0aWwvY29uc29sZSI7CnZhciBiYXNlTWl4aW5zID0gbWl4aW5zKERlbGF5YWJsZSwgVG9nZ2xlYWJsZSk7Ci8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBiYXNlTWl4aW5zLmV4dGVuZCh7CiAgbmFtZTogJ2FjdGl2YXRhYmxlJywKICBwcm9wczogewogICAgYWN0aXZhdG9yOiB7CiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHZhbCkgewogICAgICAgIHJldHVybiBbJ3N0cmluZycsICdvYmplY3QnXS5pbmNsdWRlcyhfdHlwZW9mKHZhbCkpOwogICAgICB9CiAgICB9LAogICAgZGlzYWJsZWQ6IEJvb2xlYW4sCiAgICBpbnRlcm5hbEFjdGl2YXRvcjogQm9vbGVhbiwKICAgIG9wZW5PbkhvdmVyOiBCb29sZWFuCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gRG8gbm90IHVzZSB0aGlzIGRpcmVjdGx5LCBjYWxsIGdldEFjdGl2YXRvcigpIGluc3RlYWQKICAgICAgYWN0aXZhdG9yRWxlbWVudDogbnVsbCwKICAgICAgYWN0aXZhdG9yTm9kZTogW10sCiAgICAgIGV2ZW50czogWydjbGljaycsICdtb3VzZWVudGVyJywgJ21vdXNlbGVhdmUnXSwKICAgICAgbGlzdGVuZXJzOiB7fQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBhY3RpdmF0b3I6ICdyZXNldEFjdGl2YXRvcicsCiAgICBvcGVuT25Ib3ZlcjogJ3Jlc2V0QWN0aXZhdG9yJwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBzbG90VHlwZSA9IGdldFNsb3RUeXBlKHRoaXMsICdhY3RpdmF0b3InLCB0cnVlKTsKCiAgICBpZiAoc2xvdFR5cGUgJiYgWyd2LXNsb3QnLCAnbm9ybWFsJ10uaW5jbHVkZXMoc2xvdFR5cGUpKSB7CiAgICAgIGNvbnNvbGVFcnJvcigiVGhlIGFjdGl2YXRvciBzbG90IG11c3QgYmUgYm91bmQsIHRyeSAnPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9XCJ7IG9uIH1cIj48di1idG4gdi1vbj1cIm9uXCI+JyIsIHRoaXMpOwogICAgfQoKICAgIHRoaXMuYWRkQWN0aXZhdG9yRXZlbnRzKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5yZW1vdmVBY3RpdmF0b3JFdmVudHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFkZEFjdGl2YXRvckV2ZW50czogZnVuY3Rpb24gYWRkQWN0aXZhdG9yRXZlbnRzKCkgewogICAgICBpZiAoIXRoaXMuYWN0aXZhdG9yIHx8IHRoaXMuZGlzYWJsZWQgfHwgIXRoaXMuZ2V0QWN0aXZhdG9yKCkpIHJldHVybjsKICAgICAgdGhpcy5saXN0ZW5lcnMgPSB0aGlzLmdlbkFjdGl2YXRvckxpc3RlbmVycygpOwogICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMubGlzdGVuZXJzKTsKCiAgICAgIGZvciAodmFyIF9pID0gMCwgX2tleXMgPSBrZXlzOyBfaSA8IF9rZXlzLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBrZXkgPSBfa2V5c1tfaV07CiAgICAgICAgdGhpcy5nZXRBY3RpdmF0b3IoKS5hZGRFdmVudExpc3RlbmVyKGtleSwgdGhpcy5saXN0ZW5lcnNba2V5XSk7CiAgICAgIH0KICAgIH0sCiAgICBnZW5BY3RpdmF0b3I6IGZ1bmN0aW9uIGdlbkFjdGl2YXRvcigpIHsKICAgICAgdmFyIG5vZGUgPSBnZXRTbG90KHRoaXMsICdhY3RpdmF0b3InLCBPYmplY3QuYXNzaWduKHRoaXMuZ2V0VmFsdWVQcm94eSgpLCB7CiAgICAgICAgb246IHRoaXMuZ2VuQWN0aXZhdG9yTGlzdGVuZXJzKCksCiAgICAgICAgYXR0cnM6IHRoaXMuZ2VuQWN0aXZhdG9yQXR0cmlidXRlcygpCiAgICAgIH0pKSB8fCBbXTsKICAgICAgdGhpcy5hY3RpdmF0b3JOb2RlID0gbm9kZTsKICAgICAgcmV0dXJuIG5vZGU7CiAgICB9LAogICAgZ2VuQWN0aXZhdG9yQXR0cmlidXRlczogZnVuY3Rpb24gZ2VuQWN0aXZhdG9yQXR0cmlidXRlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICByb2xlOiAnYnV0dG9uJywKICAgICAgICAnYXJpYS1oYXNwb3B1cCc6IHRydWUsCiAgICAgICAgJ2FyaWEtZXhwYW5kZWQnOiBTdHJpbmcodGhpcy5pc0FjdGl2ZSkKICAgICAgfTsKICAgIH0sCiAgICBnZW5BY3RpdmF0b3JMaXN0ZW5lcnM6IGZ1bmN0aW9uIGdlbkFjdGl2YXRvckxpc3RlbmVycygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSByZXR1cm4ge307CiAgICAgIHZhciBsaXN0ZW5lcnMgPSB7fTsKCiAgICAgIGlmICh0aGlzLm9wZW5PbkhvdmVyKSB7CiAgICAgICAgbGlzdGVuZXJzLm1vdXNlZW50ZXIgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXMuZ2V0QWN0aXZhdG9yKGUpOwoKICAgICAgICAgIF90aGlzLnJ1bkRlbGF5KCdvcGVuJyk7CiAgICAgICAgfTsKCiAgICAgICAgbGlzdGVuZXJzLm1vdXNlbGVhdmUgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXMuZ2V0QWN0aXZhdG9yKGUpOwoKICAgICAgICAgIF90aGlzLnJ1bkRlbGF5KCdjbG9zZScpOwogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGlzdGVuZXJzLmNsaWNrID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIHZhciBhY3RpdmF0b3IgPSBfdGhpcy5nZXRBY3RpdmF0b3IoZSk7CgogICAgICAgICAgaWYgKGFjdGl2YXRvcikgYWN0aXZhdG9yLmZvY3VzKCk7CiAgICAgICAgICBfdGhpcy5pc0FjdGl2ZSA9ICFfdGhpcy5pc0FjdGl2ZTsKICAgICAgICB9OwogICAgICB9CgogICAgICByZXR1cm4gbGlzdGVuZXJzOwogICAgfSwKICAgIGdldEFjdGl2YXRvcjogZnVuY3Rpb24gZ2V0QWN0aXZhdG9yKGUpIHsKICAgICAgLy8gSWYgd2UndmUgYWxyZWFkeSBmZXRjaGVkIHRoZSBhY3RpdmF0b3IsIHJlLXVzZQogICAgICBpZiAodGhpcy5hY3RpdmF0b3JFbGVtZW50KSByZXR1cm4gdGhpcy5hY3RpdmF0b3JFbGVtZW50OwogICAgICB2YXIgYWN0aXZhdG9yID0gbnVsbDsKCiAgICAgIGlmICh0aGlzLmFjdGl2YXRvcikgewogICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLmludGVybmFsQWN0aXZhdG9yID8gdGhpcy4kZWwgOiBkb2N1bWVudDsKCiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmFjdGl2YXRvciA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgIC8vIFNlbGVjdG9yCiAgICAgICAgICBhY3RpdmF0b3IgPSB0YXJnZXQucXVlcnlTZWxlY3Rvcih0aGlzLmFjdGl2YXRvcik7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2YXRvci4kZWwpIHsKICAgICAgICAgIC8vIENvbXBvbmVudCAocmVmKQogICAgICAgICAgYWN0aXZhdG9yID0gdGhpcy5hY3RpdmF0b3IuJGVsOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyBIVE1MRWxlbWVudCB8IEVsZW1lbnQKICAgICAgICAgIGFjdGl2YXRvciA9IHRoaXMuYWN0aXZhdG9yOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChlKSB7CiAgICAgICAgLy8gQWN0aXZhdGVkIGJ5IGEgY2xpY2sgZXZlbnQKICAgICAgICBhY3RpdmF0b3IgPSBlLmN1cnJlbnRUYXJnZXQgfHwgZS50YXJnZXQ7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5hY3RpdmF0b3JOb2RlLmxlbmd0aCkgewogICAgICAgIC8vIExhc3QgcmVzb3J0LCB1c2UgdGhlIGNvbnRlbnRzIG9mIHRoZSBhY3RpdmF0b3Igc2xvdAogICAgICAgIHZhciB2bSA9IHRoaXMuYWN0aXZhdG9yTm9kZVswXS5jb21wb25lbnRJbnN0YW5jZTsKCiAgICAgICAgaWYgKHZtICYmIHZtLiRvcHRpb25zLm1peGlucyAmJiAvLyAgICAgICAgICAgICAgICAgICAgICAgICBBY3RpdmF0YWJsZSBpcyBpbmRpcmVjdGx5IHVzZWQgdmlhIE1lbnVhYmxlCiAgICAgICAgdm0uJG9wdGlvbnMubWl4aW5zLnNvbWUoZnVuY3Rpb24gKG0pIHsKICAgICAgICAgIHJldHVybiBtLm9wdGlvbnMgJiYgWydhY3RpdmF0YWJsZScsICdtZW51YWJsZSddLmluY2x1ZGVzKG0ub3B0aW9ucy5uYW1lKTsKICAgICAgICB9KSkgewogICAgICAgICAgLy8gQWN0aXZhdG9yIGlzIGFjdHVhbGx5IGFub3RoZXIgYWN0aXZhdGlibGUgY29tcG9uZW50LCB1c2UgaXRzIGFjdGl2YXRvciAoIzg4NDYpCiAgICAgICAgICBhY3RpdmF0b3IgPSB2bS5nZXRBY3RpdmF0b3IoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgYWN0aXZhdG9yID0gdGhpcy5hY3RpdmF0b3JOb2RlWzBdLmVsbTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuYWN0aXZhdG9yRWxlbWVudCA9IGFjdGl2YXRvcjsKICAgICAgcmV0dXJuIHRoaXMuYWN0aXZhdG9yRWxlbWVudDsKICAgIH0sCiAgICBnZXRDb250ZW50U2xvdDogZnVuY3Rpb24gZ2V0Q29udGVudFNsb3QoKSB7CiAgICAgIHJldHVybiBnZXRTbG90KHRoaXMsICdkZWZhdWx0JywgdGhpcy5nZXRWYWx1ZVByb3h5KCksIHRydWUpOwogICAgfSwKICAgIGdldFZhbHVlUHJveHk6IGZ1bmN0aW9uIGdldFZhbHVlUHJveHkoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgcmV0dXJuIHsKICAgICAgICBnZXQgdmFsdWUoKSB7CiAgICAgICAgICByZXR1cm4gc2VsZi5pc0FjdGl2ZTsKICAgICAgICB9LAoKICAgICAgICBzZXQgdmFsdWUoaXNBY3RpdmUpIHsKICAgICAgICAgIHNlbGYuaXNBY3RpdmUgPSBpc0FjdGl2ZTsKICAgICAgICB9CgogICAgICB9OwogICAgfSwKICAgIHJlbW92ZUFjdGl2YXRvckV2ZW50czogZnVuY3Rpb24gcmVtb3ZlQWN0aXZhdG9yRXZlbnRzKCkgewogICAgICBpZiAoIXRoaXMuYWN0aXZhdG9yIHx8ICF0aGlzLmFjdGl2YXRvckVsZW1lbnQpIHJldHVybjsKICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmxpc3RlbmVycyk7CgogICAgICBmb3IgKHZhciBfaTIgPSAwLCBfa2V5czIgPSBrZXlzOyBfaTIgPCBfa2V5czIubGVuZ3RoOyBfaTIrKykgewogICAgICAgIHZhciBrZXkgPSBfa2V5czJbX2kyXTsKICAgICAgICB0aGlzLmFjdGl2YXRvckVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihrZXksIHRoaXMubGlzdGVuZXJzW2tleV0pOwogICAgICB9CgogICAgICB0aGlzLmxpc3RlbmVycyA9IHt9OwogICAgfSwKICAgIHJlc2V0QWN0aXZhdG9yOiBmdW5jdGlvbiByZXNldEFjdGl2YXRvcigpIHsKICAgICAgdGhpcy5hY3RpdmF0b3JFbGVtZW50ID0gbnVsbDsKICAgICAgdGhpcy5nZXRBY3RpdmF0b3IoKTsKICAgICAgdGhpcy5hZGRBY3RpdmF0b3JFdmVudHMoKTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["../../../src/mixins/activatable/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    } as PropValidator<string | HTMLElement | VNode | Element | null>,\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      } else if (this.activatorNode.length) {\n        // Last resort, use the contents of the activator slot\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n"],"sourceRoot":""}]}