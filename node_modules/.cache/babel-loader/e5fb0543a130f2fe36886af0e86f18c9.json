{"remainingRequest":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js!D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\components\\VGrid\\VCol.js","dependencies":[{"path":"D:\\__work\\mmaqa.com\\node_modules\\vuetify\\lib\\components\\VGrid\\VCol.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\__work\\mmaqa.com\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VGrid/VCol.ts"],"names":[],"mappings":"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","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    justifySelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n        [`justify-self-${props.justifySelf}`]: props.justifySelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n"],"sourceRoot":""}]}